<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.king.mapper.StorageMapper" >
  <resultMap id="BaseResultMap" type="com.king.pojo.Storage" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="sId" property="sid" jdbcType="INTEGER" />
    <result column="sName" property="sname" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="DOUBLE" />
    <result column="totalMoney" property="totalmoney" jdbcType="DOUBLE" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="createTime" property="createtime" jdbcType="DATE" />
    <result column="mId" property="mid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, path, sId, sName, number, money, totalMoney, status, createTime, mId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.king.pojo.StorageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from storage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from storage
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from storage
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from storage
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.king.pojo.StorageExample" >
    delete from storage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.king.pojo.Storage" >
    insert into storage (id, name, path, 
      sId, sName, number, 
      money, totalMoney, status, 
      createTime, mId)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, 
      #{sid,jdbcType=INTEGER}, #{sname,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER}, 
      #{money,jdbcType=DOUBLE}, #{totalmoney,jdbcType=DOUBLE}, #{status,jdbcType=INTEGER}, 
     Now(), #{mid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.king.pojo.Storage" >
    insert into storage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="sid != null" >
        sId,
      </if>
      <if test="sname != null" >
        sName,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="totalmoney != null" >
        totalMoney,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="mid != null" >
        mId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="sid != null" >
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="sname != null" >
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="totalmoney != null" >
        #{totalmoney,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=DATE},
      </if>
      <if test="mid != null" >
        #{mid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.king.pojo.StorageExample" resultType="java.lang.Integer" >
    select count(*) from storage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update storage
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null" >
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.sid != null" >
        sId = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.sname != null" >
        sName = #{record.sname,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.totalmoney != null" >
        totalMoney = #{record.totalmoney,jdbcType=DOUBLE},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=DATE},
      </if>
      <if test="record.mid != null" >
        mId = #{record.mid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update storage
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=VARCHAR},
      sId = #{record.sid,jdbcType=INTEGER},
      sName = #{record.sname,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DOUBLE},
      totalMoney = #{record.totalmoney,jdbcType=DOUBLE},
      status = #{record.status,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=DATE},
      mId = #{record.mid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.king.pojo.Storage" >
    update storage
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="sid != null" >
        sId = #{sid,jdbcType=INTEGER},
      </if>
      <if test="sname != null" >
        sName = #{sname,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="totalmoney != null" >
        totalMoney = #{totalmoney,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=DATE},
      </if>
      <if test="mid != null" >
        mId = #{mid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.king.pojo.Storage" >
    update storage
    set name = #{name,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      sId = #{sid,jdbcType=INTEGER},
      sName = #{sname,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      money = #{money,jdbcType=DOUBLE},
      totalMoney = #{totalmoney,jdbcType=DOUBLE},
      status = #{status,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=DATE},
      mId = #{mid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>